#!/usr/bin/env ruby
require 'fileutils'

APP_ROOT = File.expand_path('..', __dir__)
dir = ARGV[0] || APP_ROOT

# Check if 'llm' command exists
unless system('command -v llm > /dev/null 2>&1')
  puts "Error: 'llm' command not found. Please install 'llm' with 'brew install llm' before running this script."
  exit 1
end

llm_prompt = <<~PROMPT
  simplify this paragraph into a concise 1 sentence commit message.
  return only the commit message, nothing else. Do not surround the commit message with quotes.
  the commit message does not need to be grammatically correct. Do not include any other text.
PROMPT

dir = File.expand_path(dir)

FileUtils.chdir dir do
  changes = `git status --porcelain`
  if changes.strip.empty?
    puts 'No changes to commit. Aborting.'
    exit 0
  end
  if ARGV[1] && ARGV[1] != '--dry-run'
    commit_message = ARGV[1]
  else
    `git add .` # add changes so they are staged
    changes_summary = `git diff --cached | llm -s 'summarize these changes into a brief paragraph' --no-stream`
    puts "Changes summary: #{changes_summary}\n\n"
    commit_message = `llm -c '#{llm_prompt}' --no-stream`
    puts "Commit message: '#{commit_message}'"
  end

  return if ARGV.include?('--dry-run')

  `git add . && git commit -m "#{commit_message}"`
  puts 'Pushing changes to remote...'
  `git push`
end
